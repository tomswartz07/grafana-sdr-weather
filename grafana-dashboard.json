{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "description": "RTL_SDR Based Weather Data Collection",
  "editable": false,
  "gnetId": null,
  "graphTooltip": 0,
  "id": 1,
  "links": [],
  "panels": [
    {
      "aliasColors": {
        "A Tower Sensor": "green",
        "B Yard Sensor": "yellow",
        "C Garage Sensor": "blue",
        "Garage Sensor": "blue",
        "Wind Chill": "dark-blue",
        "Yard Sensor": "yellow"
      },
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": null,
      "description": "- Yard Sensor: Acurite 3-in-1 Weather Sensor\n- Garage Sensor: Acurite Tower Sensor in Garage\n- Data Closet Sensor: Accurite Temp/Humidity Sensor in Data Closet\n- Tower Sensor: Neighbor device, unknown location",
      "fieldConfig": {
        "defaults": {
          "custom": {},
          "links": []
        },
        "overrides": []
      },
      "fill": 0,
      "fillGradient": 1,
      "gridPos": {
        "h": 16,
        "w": 20,
        "x": 0,
        "y": 0
      },
      "hiddenSeries": false,
      "id": 6,
      "legend": {
        "alignAsTable": true,
        "avg": true,
        "current": true,
        "max": true,
        "min": true,
        "rightSide": false,
        "show": true,
        "total": false,
        "values": true
      },
      "lines": true,
      "linewidth": 1,
      "nullPointMode": "null",
      "percentage": false,
      "pluginVersion": "7.1.1",
      "pointradius": 0.5,
      "points": true,
      "renderer": "flot",
      "seriesOverrides": [
        {
          "alias": "Wind Chill",
          "lines": false
        },
        {
          "alias": "Heat Index",
          "lines": false
        }
      ],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT\n  (data ->> 'time')::timestamp with time zone AS \"time\",\n  (data -> 'fields' ->> 'temperature_F')::decimal AS \"Yard Sensor\"\nFROM weather\nwhere \n(data ->> 'measurement') like 'Acurite 3n1 sensor'\nand\n(data ->> 'time')::timestamp with time zone between $__timeFrom() and $__timeTo()\nORDER BY 1;\n",
          "refId": "B",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT\n  (data ->> 'time')::timestamp with time zone AS \"time\",\n  (data -> 'fields' ->> 'temperature_F')::decimal AS \"Garage Sensor\"\nFROM weather\nwhere \n(data -> 'tags' ->> 'id') like '9359'\nand\n(data ->> 'time')::timestamp with time zone between $__timeFrom() and $__timeTo()\nORDER BY 1;\n",
          "refId": "C",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT\n  (data ->> 'time')::timestamp with time zone AS \"time\",\n  (data -> 'fields' ->> 'temperature_F')::decimal AS \"Data Closet Sensor\"\nFROM weather\nwhere \n(data -> 'tags' ->> 'id') like '13064'\nand\n(data ->> 'time')::timestamp with time zone between $__timeFrom() and $__timeTo()\nORDER BY 1;\n",
          "refId": "D",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT\n  (data ->> 'time')::timestamp with time zone AS \"time\",\n  (data -> 'fields' ->> 'temperature_F')::decimal AS \"Tower Sensor\"\nFROM weather\nwhere \n(data -> 'tags' ->> 'id') like '6104'\nand\n(data ->> 'time')::timestamp with time zone between $__timeFrom() and $__timeTo()\nORDER BY 1;",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT\n(data ->> 'time')::timestamp with time zone AS \"time\",\n(35.74 \n+ (0.6215 * ((data -> 'fields' ->> 'temperature_F')::decimal)) \n- (35.75 * ((data -> 'fields' ->> 'wind_speed_mph')::decimal)^0.16)\n+(0.4275 * ((data -> 'fields' ->> 'temperature_F')::decimal) * ((data -> 'fields' ->> 'wind_speed_mph')::decimal)^0.16)) \nAS \"Wind Chill\"\nFROM weather\nWHERE\n(data -> 'fields' ->> 'wind_speed_mph')::decimal >= 4\nAND\n(data -> 'fields' ->> 'temperature_F')::decimal <= 40\nAND\n(data ->> 'time')::timestamp with time zone between $__timeFrom() and $__timeTo()\nORDER BY 1;",
          "refId": "E",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT\n(data ->> 'time')::timestamp with time zone AS \"time\",\n(-42.379\n+ (2.04901523 * ((data -> 'fields' ->> 'temperature_F')::decimal)) \n+ (10.1433313 * ((data -> 'fields' ->> 'humidity')::decimal)) \n- (0.22475541 * ((data -> 'fields' ->> 'temperature_F')::decimal) * ((data -> 'fields' ->> 'humidity')::decimal)) \n- (0.00683783 * ((data -> 'fields' ->> 'temperature_F')::decimal)^2) \n- (0.05481717 * ((data -> 'fields' ->> 'humidity')::decimal)^2) \n+ (0.00122874 * ((data -> 'fields' ->> 'temperature_F')::decimal)^2 * (data -> 'fields' ->> 'humidity')::decimal)\n+ (0.00085282 * ((data -> 'fields' ->> 'temperature_F')::decimal) * ((data -> 'fields' ->> 'humidity')::decimal)^2) \n- (0.00000199 * ((data -> 'fields' ->> 'temperature_F')::decimal)^2 * ((data -> 'fields' ->> 'humidity')::decimal)^2))\nAS \"Heat Index\"\nFROM weather\nWHERE\n(data -> 'fields' ->> 'temperature_F')::decimal >= 80\nAND\n(data -> 'fields' ->> 'humidity')::decimal >= 40\nAND\n(data ->> 'measurement') like 'Acurite 3n1 sensor'\nAND\n(data ->> 'time')::timestamp with time zone between $__timeFrom() and $__timeTo()\nORDER BY 1;",
          "refId": "F",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": [
        {
          "colorMode": "custom",
          "fill": true,
          "fillColor": "#5794F2",
          "line": false,
          "lineColor": "rgba(31, 96, 196, 0.6)",
          "op": "lt",
          "value": 32,
          "yaxis": "left"
        }
      ],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Combined Temperature Display",
      "tooltip": {
        "shared": true,
        "sort": 2,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "format": "fahrenheit",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": false
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "cacheTimeout": null,
      "datasource": null,
      "fieldConfig": {
        "defaults": {
          "custom": {},
          "mappings": [
            {
              "id": 0,
              "op": "=",
              "text": "N/A",
              "type": 1,
              "value": "null"
            }
          ],
          "nullValueMode": "connected",
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "#5794F2",
                "value": null
              },
              {
                "color": "#37872D",
                "value": 32
              },
              {
                "color": "#d44a3a",
                "value": 85
              }
            ]
          },
          "unit": "fahrenheit"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 4,
        "x": 20,
        "y": 0
      },
      "id": 18,
      "interval": null,
      "links": [],
      "maxDataPoints": 100,
      "options": {
        "colorMode": "value",
        "fieldOptions": {
          "calcs": [
            "lastNotNull"
          ]
        },
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "last"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "7.1.1",
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT\n  (data ->> 'time')::timestamp with time zone AS \"time\",\n  (data -> 'fields' ->> 'temperature_F')::decimal as \"Temp\"\nFROM weather\nwhere \n(data ->> 'measurement') like 'Acurite 3n1 sensor'\nand\n(data ->> 'time')::timestamp with time zone between $__timeFrom() and $__timeTo()\nORDER BY time;",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "Yard Sensor",
      "type": "stat"
    },
    {
      "cacheTimeout": null,
      "datasource": null,
      "fieldConfig": {
        "defaults": {
          "custom": {},
          "mappings": [
            {
              "id": 0,
              "op": "=",
              "text": "N/A",
              "type": 1,
              "value": "null"
            }
          ],
          "nullValueMode": "connected",
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "#5794F2",
                "value": null
              },
              {
                "color": "#37872D",
                "value": 32
              },
              {
                "color": "#d44a3a",
                "value": 85
              }
            ]
          },
          "unit": "fahrenheit"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 4,
        "x": 20,
        "y": 4
      },
      "id": 19,
      "interval": null,
      "links": [],
      "maxDataPoints": 100,
      "options": {
        "colorMode": "value",
        "fieldOptions": {
          "calcs": [
            "lastNotNull"
          ]
        },
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "last"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "7.1.1",
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT\n  (data ->> 'time')::timestamp with time zone AS \"time\",\n  (data -> 'fields' ->> 'temperature_F')::decimal as \"Temp\"\nFROM weather\nwhere \n(data ->> 'measurement') like 'Acurite tower sensor'\nand\n(data -> 'tags' ->> 'channel') like 'A'\nand\n(data ->> 'time')::timestamp with time zone between $__timeFrom() and $__timeTo()\nORDER BY time;",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "Tower Sensor",
      "type": "stat"
    },
    {
      "cacheTimeout": null,
      "datasource": null,
      "fieldConfig": {
        "defaults": {
          "custom": {},
          "mappings": [
            {
              "id": 0,
              "op": "=",
              "text": "N/A",
              "type": 1,
              "value": "null"
            }
          ],
          "nullValueMode": "connected",
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "#5794F2",
                "value": null
              },
              {
                "color": "#37872D",
                "value": 32
              },
              {
                "color": "#d44a3a",
                "value": 80
              }
            ]
          },
          "unit": "fahrenheit"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 4,
        "x": 20,
        "y": 8
      },
      "id": 20,
      "interval": null,
      "links": [],
      "maxDataPoints": 100,
      "options": {
        "colorMode": "value",
        "fieldOptions": {
          "calcs": [
            "lastNotNull"
          ]
        },
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "last"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "7.1.1",
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT\n  (data ->> 'time')::timestamp with time zone AS \"time\",\n  (data -> 'fields' ->> 'temperature_F')::decimal as \"Temp\"\nFROM weather\nwhere \n(data -> 'tags' ->> 'id') like '9359'\nand\n(data ->> 'time')::timestamp with time zone between $__timeFrom() and $__timeTo()\nORDER BY time;",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "Garage Sensor",
      "type": "stat"
    },
    {
      "cacheTimeout": null,
      "datasource": null,
      "fieldConfig": {
        "defaults": {
          "custom": {},
          "mappings": [
            {
              "id": 0,
              "op": "=",
              "text": "N/A",
              "type": 1,
              "value": "null"
            }
          ],
          "nullValueMode": "connected",
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "#5794F2",
                "value": null
              },
              {
                "color": "#37872D",
                "value": 60
              },
              {
                "color": "#d44a3a",
                "value": 85
              }
            ]
          },
          "unit": "fahrenheit"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 4,
        "x": 20,
        "y": 12
      },
      "id": 24,
      "interval": null,
      "links": [],
      "maxDataPoints": 100,
      "options": {
        "colorMode": "value",
        "fieldOptions": {
          "calcs": [
            "lastNotNull"
          ]
        },
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "last"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "7.1.1",
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT\n  (data ->> 'time')::timestamp with time zone AS \"time\",\n  (data -> 'fields' ->> 'temperature_F')::decimal as \"Temp\"\nFROM weather\nwhere \n(data -> 'tags' ->> 'id') like '13064'\nand\n(data ->> 'time')::timestamp with time zone between $__timeFrom() and $__timeTo()\nORDER BY time;",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "Data Closet Sensor",
      "type": "stat"
    },
    {
      "cacheTimeout": null,
      "datasource": null,
      "fieldConfig": {
        "defaults": {
          "custom": {},
          "mappings": [
            {
              "id": 0,
              "op": "=",
              "text": "N/A",
              "type": 1,
              "value": "null"
            }
          ],
          "nullValueMode": "connected",
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "humidity"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 7,
        "x": 0,
        "y": 16
      },
      "id": 16,
      "interval": null,
      "links": [],
      "maxDataPoints": 100,
      "options": {
        "colorMode": "value",
        "fieldOptions": {
          "calcs": [
            "lastNotNull"
          ]
        },
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "last"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "7.1.1",
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT\n  (data ->> 'time')::timestamp with time zone AS \"time\",\n  (data -> 'fields' ->> 'humidity')::decimal as \"Humidity\"\nFROM weather\nwhere \n(data ->> 'measurement') like 'Acurite 3n1 sensor'\nand\n(data ->> 'time')::timestamp with time zone >= $__timeFrom()\nand \n(data ->> 'time')::timestamp with time zone <= $__timeTo()\nORDER BY time;\n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "Outdoor Humidity",
      "type": "stat"
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": null,
      "fieldConfig": {
        "defaults": {
          "custom": {},
          "links": []
        },
        "overrides": []
      },
      "fill": 1,
      "fillGradient": 0,
      "gridPos": {
        "h": 9,
        "w": 7,
        "x": 7,
        "y": 16
      },
      "hiddenSeries": false,
      "id": 8,
      "legend": {
        "alignAsTable": true,
        "avg": true,
        "current": true,
        "hideEmpty": false,
        "hideZero": false,
        "max": true,
        "min": true,
        "rightSide": false,
        "show": true,
        "total": false,
        "values": true
      },
      "lines": false,
      "linewidth": 1,
      "nullPointMode": "null as zero",
      "percentage": false,
      "pluginVersion": "7.1.1",
      "pointradius": 0.5,
      "points": true,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT\n  (data ->> 'time')::timestamp with time zone AS \"time\",\n  (data -> 'fields' ->> 'wind_speed_mph')::decimal AS \"Wind Speed\"\nFROM weather\nwhere \n--(data -> 'fields' ->> 'wind_speed_mph') is not null\n--and\n(data ->> 'measurement') like 'Acurite 3n1 sensor'\nand\n(data ->> 'time')::timestamp with time zone between $__timeFrom() and $__timeTo()\nORDER BY time;",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "format": "time_series",
          "group": [],
          "hide": true,
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT\n  (data ->> 'time')::timestamp with time zone AS \"time\",\n  avg((data -> 'fields' ->> 'wind_speed_mph')::decimal) OVER (ORDER BY (data ->> 'time')::timestamp with time zone ROWS 70 PRECEDING) AS \"Wind\"\nFROM weather\nWHERE\n  (data ->> 'time')::timestamp with time zone between $__timeFrom() and $__timeTo()\nORDER BY 1",
          "refId": "B",
          "select": [
            [
              {
                "params": [
                  "(data -> 'fields' ->> 'wind_speed_mph)::decimal"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg",
                  "5"
                ],
                "type": "moving_window"
              },
              {
                "params": [
                  "Wind"
                ],
                "type": "alias"
              }
            ]
          ],
          "table": "weather",
          "timeColumn": "(data ->> 'time')::timestamp with time zone",
          "timeColumnType": "int8",
          "where": [
            {
              "name": "$__unixEpochFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Wind Speed",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "format": "velocitymph",
          "label": "Wind Speed",
          "logBase": 1,
          "max": null,
          "min": "0",
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": false
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "aliasColors": {
        "A LaCrosse": "purple",
        "B Yard Sensor": "yellow",
        "C Tower Sensor": "green",
        "D Garage Sensor": "blue",
        "Data Closet Sensor": "orange",
        "Garage Sensor": "blue",
        "LaCrosse": "purple",
        "Tower Sensor": "green",
        "Yard Sensor": "yellow"
      },
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": null,
      "fieldConfig": {
        "defaults": {
          "custom": {},
          "links": []
        },
        "overrides": []
      },
      "fill": 1,
      "fillGradient": 0,
      "gridPos": {
        "h": 9,
        "w": 10,
        "x": 14,
        "y": 16
      },
      "hiddenSeries": false,
      "id": 10,
      "legend": {
        "alignAsTable": true,
        "avg": true,
        "current": false,
        "hideEmpty": false,
        "hideZero": false,
        "max": true,
        "min": true,
        "rightSide": false,
        "show": true,
        "total": false,
        "values": true
      },
      "lines": false,
      "linewidth": 1,
      "nullPointMode": "null",
      "percentage": false,
      "pluginVersion": "7.1.1",
      "pointradius": 0.5,
      "points": true,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select\n(data ->> 'time')::timestamp with time zone AS \"time\",\n(data -> 'fields' ->> 'rssi')::real as \"LaCrosse\"\nfrom weather\nwhere (data ->> 'measurement') like 'LaCrosse TX141-Bv2 sensor'\nand\n(data ->> 'time')::timestamp with time zone between $__timeFrom() and $__timeTo()\norder by 1,2;\n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select\n(data ->> 'time')::timestamp with time zone AS \"time\",\n(data -> 'fields' ->> 'rssi')::real as \"Yard Sensor\"\nfrom weather\nwhere (data ->> 'measurement') like 'Acurite 3n1 sensor'\nand\n(data ->> 'time')::timestamp with time zone between $__timeFrom() and $__timeTo()\norder by 1,2;\n",
          "refId": "B",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select\n(data ->> 'time')::timestamp with time zone AS \"time\",\n(data -> 'fields' ->> 'rssi')::real as \"Tower Sensor\"\nfrom weather\nwhere\n(data -> 'tags' ->> 'id') like '6104'\nand\n(data ->> 'time')::timestamp with time zone between $__timeFrom() and $__timeTo()\norder by 1,2;\n",
          "refId": "C",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select\n(data ->> 'time')::timestamp with time zone AS \"time\",\n(data -> 'fields' ->> 'rssi')::real as \"Garage Sensor\"\nfrom weather\nwhere \n(data -> 'tags' ->> 'id') like '9359'\nand\n(data ->> 'time')::timestamp with time zone between $__timeFrom() and $__timeTo()\norder by 1,2;\n",
          "refId": "D",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select\n(data ->> 'time')::timestamp with time zone AS \"time\",\n(data -> 'fields' ->> 'rssi')::real as \"Data Closet Sensor\"\nfrom weather\nwhere \n(data -> 'tags' ->> 'id') like '13064'\nand\n(data ->> 'time')::timestamp with time zone between $__timeFrom() and $__timeTo()\norder by 1,2;\n",
          "refId": "E",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Signal Strength",
      "tooltip": {
        "shared": true,
        "sort": 2,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "format": "dB",
          "label": "Received Signal Strength Indicator",
          "logBase": 1,
          "max": "0",
          "min": null,
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": false
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "cacheTimeout": null,
      "datasource": null,
      "fieldConfig": {
        "defaults": {
          "custom": {},
          "mappings": [
            {
              "id": 0,
              "op": "=",
              "text": "N/A",
              "type": 1,
              "value": "null"
            }
          ],
          "nullValueMode": "connected",
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "super-light-green",
                "value": null
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 3,
        "x": 0,
        "y": 19
      },
      "id": 14,
      "interval": null,
      "links": [],
      "maxDataPoints": 100,
      "options": {
        "colorMode": "value",
        "fieldOptions": {
          "calcs": [
            "lastNotNull"
          ]
        },
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "last"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "7.1.1",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT id FROM weather ORDER BY id DESC LIMIT 1;",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "All Time",
      "type": "stat"
    },
    {
      "datasource": null,
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {},
          "displayName": "Relative Humidity",
          "mappings": [],
          "max": 100,
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "yellow",
                "value": null
              },
              {
                "color": "green",
                "value": 35
              },
              {
                "color": "red",
                "value": 65
              }
            ]
          },
          "unit": "humidity"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 6,
        "w": 4,
        "x": 3,
        "y": 19
      },
      "id": 12,
      "options": {
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "last"
          ],
          "fields": "",
          "values": false
        },
        "showThresholdLabels": false,
        "showThresholdMarkers": true
      },
      "pluginVersion": "7.1.1",
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT\n  (data ->> 'time')::timestamp with time zone AS \"time\",\n  (data -> 'fields' ->> 'humidity')::decimal as \"Humidity\"\nFROM weather\nwhere \n(data -> 'tags' ->> 'id') like '13064'\nand\n(data ->> 'time')::timestamp with time zone between $__timeFrom() and $__timeTo()\nORDER BY time desc\nLIMIT 1;\n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "Indoor Humidity",
      "type": "gauge"
    },
    {
      "cacheTimeout": null,
      "datasource": null,
      "fieldConfig": {
        "defaults": {
          "custom": {},
          "mappings": [
            {
              "id": 0,
              "op": "=",
              "text": "N/A",
              "type": 1,
              "value": "null"
            }
          ],
          "nullValueMode": "connected",
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "super-light-green",
                "value": null
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 3,
        "x": 0,
        "y": 22
      },
      "id": 21,
      "interval": null,
      "links": [],
      "maxDataPoints": 100,
      "options": {
        "colorMode": "value",
        "fieldOptions": {
          "calcs": [
            "lastNotNull"
          ]
        },
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "last"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "7.1.1",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT\ncount(*)\nfrom weather\nwhere\n(data ->> 'time')::timestamp with time zone between $__timeFrom() and $__timeTo();",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "Current Time Window",
      "type": "stat"
    }
  ],
  "refresh": "1h",
  "schemaVersion": 26,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": []
  },
  "time": {
    "from": "now-24h",
    "to": "now"
  },
  "timepicker": {
    "nowDelay": "",
    "refresh_intervals": [
      "5m",
      "15m",
      "30m",
      "1h",
      "2h",
      "1d"
    ]
  },
  "timezone": "browser",
  "title": "Weather",
  "uid": "kh2fR1Zgk",
  "version": 116
}
